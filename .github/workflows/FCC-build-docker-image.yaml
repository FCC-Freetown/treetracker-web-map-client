name: create docker image manualy for freetown.

on:
  push:
    branches:
      - 'main'

env:
  project-directory: ./

jobs:
  release:
    if: |
      !contains(github.event.head_commit.message, 'skip-ci')
    name: Build Frontend Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.project-directory }}

      - name: Install Semantic Release
        run: npm i -g semantic-release @semantic-release/git @semantic-release/exec @semantic-release/changelog

      - name: Run Semantic Release
        run: semantic-release --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get NPM package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Build Next.js application
        run: npm run build
        working-directory: ${{ env.project-directory }}
        env:
          NODE_ENV: production

      - id: export_bumped_version
        run: |
          export BUMPED_VERSION="${{ steps.package-version.outputs.current-version }}"
          echo "bumped_version=${BUMPED_VERSION}" >> $GITHUB_OUTPUT
    outputs:
      bumped_version: ${{ steps.export_bumped_version.outputs.bumped_version }}

  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: mohmin/${{ github.event.repository.name }}:${{ needs.release.outputs.bumped_version }}